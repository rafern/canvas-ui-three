import{Root as x}from"@rafern/canvas-ui";import{CanvasTexture as d,PlaneGeometry as C,MeshBasicMaterial as w,Mesh as I,Vector2 as p,Object3D as M}from"three";var u=class extends x{constructor(e,i){var o;super(e,i);this.texture=new d(this.viewport.canvas);let t=new C;this.meshMaterial=new w({map:this.texture}),this.meshMaterial.transparent=!0,this.mesh=new I(t,this.meshMaterial),this.object=new M,this.object.add(this.mesh),this.transformAlgorithm=(o=i==null?void 0:i.transformAlgorithm)!=null?o:null}set enabled(e){super.enabled=e,this.object.visible=e}get enabled(){return super.enabled}resolveLayout(){let[e,i]=this.canvasDimensions,t=super.resolveLayout();if(t){let[o,s]=this.canvasDimensions;(e!==o||i!==s)&&(this.texture.dispose(),this.texture=new d(this.viewport.canvas),this.meshMaterial.map=this.texture,this.meshMaterial.needsUpdate=!0);let[n,a]=this.dimensions,[l,c]=this.effectiveScale,R=l*n/o,m=c*a/s;this.texture.offset=new p(0,1-m),this.texture.repeat=new p(R,m),this.mesh.scale.fromArray([n,a,1])}return t}paint(){let e=super.paint();return e&&(this.texture.needsUpdate=!0),this.transformAlgorithm!==null&&(this.transformAlgorithm(this),this.object.matrixWorldNeedsUpdate=!0),e}destroy(){super.destroy(),this.object.remove(this.mesh),this.meshMaterial.dispose(),this.mesh.geometry.dispose(),this.texture.dispose()}};import{Margin as A}from"@rafern/canvas-ui";import{VirtualKeyboard as S,defaultVirtualKeyboardTemplate as T}from"@rafern/canvas-ui";var v=class extends u{constructor(e,i){var t;super(new A(new S(e,(t=i==null?void 0:i.keyboardTemplate)!=null?t:T)),i);this.keyboardDriver=e}updateVisibility(){this.enabled=this.keyboardDriver.needsInput}};import{Raycaster as j}from"three";import{getPointerEventNormPos as f}from"@rafern/canvas-ui";var y=class{constructor(r,e){this.raycaster=new j;this.driver=null;this.pointers=new Map;this.mousePointerID=null;this.raycaster.camera=r;let i=t=>{let o=this.getPointerID(t);o!==null&&this.castRay(o,...f(t,e),t.buttons,t.shiftKey,t.ctrlKey,t.altKey)};e.addEventListener("pointermove",i),e.addEventListener("pointerdown",i),e.addEventListener("pointerup",i),e.addEventListener("pointerleave",t=>{let o=this.getPointerID(t);this.driver!==null&&o!==null&&this.driver.leaveAnyPointer(o)}),e.addEventListener("wheel",t=>{var c;if(this.mousePointerID===null||this.driver===null)return;let[o,s]=f(t,e),[n,a,l]=this.driver.castRay(...this.getCastOriginDirection(o,s));n!==null&&((c=this.driver)==null||c.wheelPointer(n,this.mousePointerID,a,l,t.deltaX,t.deltaY,t.deltaZ,t.deltaMode,t.shiftKey,t.ctrlKey,t.altKey))})}getCastOriginDirection(r,e){return this.raycaster.setFromCamera({x:r*2-1,y:1-e*2},this.raycaster.camera),[this.raycaster.ray.origin.toArray(),this.raycaster.ray.direction.toArray()]}castRay(r,e,i,t,o,s,n){this.driver!==null&&this.driver.handlePointerRay(r,t,...this.getCastOriginDirection(e,i),o,s,n)}setRayPointerDriver(r){this.driver!==null&&this.clearRayPointerDriver(),this.mousePointerID=r.registerPointer(!1),this.driver=r}clearRayPointerDriver(){var r,e;this.mousePointerID!==null&&((r=this.driver)==null||r.unregisterPointer(this.mousePointerID));for(let i of this.pointers.values())(e=this.driver)==null||e.unregisterPointer(i);this.driver=null,this.mousePointerID=null,this.pointers.clear()}onPointerHintChanged(r,e){}getPointerID(r){let e=this.pointers.get(r.pointerId);if(typeof e=="undefined"){if(e=r.pointerType==="mouse"?this.mousePointerID:null,e===null){if(this.driver===null)return null;e=this.driver.registerPointer(!0)}this.pointers.set(r.pointerId,e)}return e}get mouseID(){return this.mousePointerID}get pointerIDs(){let r=[];this.mousePointerID!==null&&r.push(this.mousePointerID);for(let e of this.pointers.values())r.push(e);return r}};import{Raycaster as H,Ray as K,Vector3 as b}from"three";import{RayPointerDriver as L}from"@rafern/canvas-ui";var P=class extends L{constructor(e){super();this.raycaster=new H;this.raycaster.camera=e}castRay(e,i){this.raycaster.ray=new K(new b(...e),new b(...i));let t=new Map;for(let n of this.states.keys())n instanceof u&&t.set(n.mesh,n);let o=Array.from(t.keys()),s=this.raycaster.intersectObjects(o);if(s.length===0)return[null,0,0];for(let n of s){let a=n.uv;if(typeof a=="undefined")continue;let l=t.get(n.object);if(typeof l!="undefined")return[l,a.x,1-a.y]}return[null,0,0]}};import{PointerHint as X}from"@rafern/canvas-ui";import{Vector3 as g}from"three";var D=class{constructor(r){this._controllers=new Map;this.driver=null;this.trackController(r.getController(0)),this.trackController(r.getController(1))}get controllers(){return this._controllers.entries()}trackController(r){let e={source:null,pointer:-1};this._controllers.set(r,e),r.addEventListener("connected",i=>{e.source=i.data,this.registerController(e)}),r.addEventListener("disconnected",i=>{e.source=null,this.unregisterController(e)}),r.addEventListener("move",i=>{if(e.source!==null&&e.pointer!==-1&&this.driver!==null){let t=new g(0,0,-1).applyQuaternion(r.quaternion),o=new g;r.getWorldPosition(o);let s=0;if(e.source.gamepad){let n=e.source.gamepad.buttons;for(let a in n){let l=parseInt(a,10);!isNaN(l)&&n[l].pressed&&(s|=1<<l)}}this.driver.handlePointerRay(e.pointer,s,o.toArray(),t.toArray(),!1,!1,!1)}}),r.userData.pointerHint=X.None}registerController(r){this.driver!==null&&r.source!==null&&r.pointer===-1&&(r.pointer=this.driver.registerPointer(!0))}unregisterController(r){this.driver!==null&&r.pointer!==-1&&this.driver.unregisterPointer(r.pointer),r.pointer=-1}setRayPointerDriver(r){this.driver!==null&&this.clearRayPointerDriver();for(let e of this._controllers.values())this.registerController(e);this.driver=r}clearRayPointerDriver(){for(let r of this._controllers.values())this.unregisterController(r);this.driver=null}onPointerHintChanged(r,e){for(let[i,t]of this._controllers)t.pointer===r&&(i.userData.pointerHint=e)}};export{y as MouseRayPointerSource,P as ThreeRayPointerDriver,u as ThreeRoot,v as ThreeVirtualKeyboardRoot,D as XRControllerRayPointerSource};
//# sourceMappingURL=index.esm.js.map
